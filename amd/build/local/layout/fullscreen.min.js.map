{"version":3,"sources":["../../../src/local/layout/fullscreen.js"],"names":["getLayoutHelpers","layoutNode","contentNode","document","createElement","append","loadingNode","requestFullscreen","msRequestFullscreen","mozRequestFullscreen","webkitRequestFullscreen","setTop","exitFullscreen","exitRequestFullScreen","fullScreenElement","msExitFullscreen","msFullscreenElement","mozCancelFullScreen","mozFullScreenElement","webkitExitFullscreen","webkitFullscreenElement","hideLoadingIcon","child","lastElementChild","removeChild","close","unlockBodyScroll","remove","toggleFullscreen","getContainer","setContent","content","showLoadingIcon","lockBodyScroll","querySelector","classList","add","getComposedLayout","fullscreen","showLoader","container","body","setAttribute","helpers"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Full screen window layout.\n *\n * @copyright  2019 Andrew Nicols <andrew@nicols.co.uk>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {addIconToContainer} from 'core/loadingicon';\nimport {addToastRegion} from 'core/toast';\n\n/**\n * @param {string} templateName\n * @param {object} context\n * @return {object}\n */\nconst getComposedLayout = ({\n    fullscreen = true,\n    showLoader = false,\n} = {}) => {\n    const container = document.createElement('div');\n    document.body.append(container);\n    container.classList.add('layout');\n    container.classList.add('fullscreen');\n    container.setAttribute('aria-role', 'application');\n    addToastRegion(container);\n\n    // Lock scrolling on the document body.\n    lockBodyScroll();\n\n    const helpers = getLayoutHelpers(container);\n\n    if (showLoader) {\n        helpers.showLoadingIcon();\n    }\n\n    if (fullscreen) {\n        helpers.requestFullscreen();\n    }\n\n    return helpers;\n};\n\nconst getLayoutHelpers = (layoutNode) => {\n    const contentNode = document.createElement('div');\n    layoutNode.append(contentNode);\n\n    const loadingNode = document.createElement('div');\n    layoutNode.append(loadingNode);\n\n    /**\n     * Close and destroy the window container.\n     */\n    const close = () => {\n        exitFullscreen();\n        unlockBodyScroll();\n\n        layoutNode.remove();\n    };\n\n    /**\n     * Attempt to make the conatiner full screen.\n     */\n    const requestFullscreen = () => {\n        if (layoutNode.requestFullscreen) {\n            layoutNode.requestFullscreen();\n        } else if (layoutNode.msRequestFullscreen) {\n            layoutNode.msRequestFullscreen();\n        } else if (layoutNode.mozRequestFullscreen) {\n            layoutNode.mozRequestFullscreen();\n        } else if (layoutNode.webkitRequestFullscreen) {\n            layoutNode.webkitRequestFullscreen();\n        } else {\n            // Not supported.\n            // Hack to make this act like full-screen as much as possible.\n            layoutNode.setTop(0);\n        }\n    };\n\n    /**\n     * Exit full screen but do not close the container fully.\n     */\n    const exitFullscreen = () => {\n        if (document.exitRequestFullScreen) {\n            if (document.fullScreenElement !== layoutNode) {\n                return;\n            }\n            document.exitRequestFullScreen();\n        } else if (document.msExitFullscreen) {\n            if (document.msFullscreenElement !== layoutNode) {\n                return;\n            }\n            document.msExitFullscreen();\n        } else if (document.mozCancelFullScreen) {\n            if (document.mozFullScreenElement !== layoutNode) {\n                return;\n            }\n            document.mozCancelFullScreen();\n        } else if (document.webkitExitFullscreen) {\n            if (document.webkitFullscreenElement !== layoutNode) {\n                return;\n            }\n            document.webkitExitFullscreen();\n        }\n    };\n\n    const toggleFullscreen = () => {\n        if (document.exitRequestFullScreen) {\n            if (document.fullScreenElement === layoutNode) {\n                exitFullscreen();\n            } else {\n                requestFullscreen();\n            }\n        } else if (document.msExitFullscreen) {\n            if (document.msFullscreenElement === layoutNode) {\n                exitFullscreen();\n            } else {\n                requestFullscreen();\n            }\n        } else if (document.mozCancelFullScreen) {\n            if (document.mozFullScreenElement === layoutNode) {\n                exitFullscreen();\n            } else {\n                requestFullscreen();\n            }\n        } else if (document.webkitExitFullscreen) {\n            if (document.webkitFullscreenElement === layoutNode) {\n                exitFullscreen();\n            } else {\n                requestFullscreen();\n            }\n        }\n    };\n\n    /**\n     * Get the Node which is fullscreen.\n     *\n     * @return {Element}\n     */\n    const getContainer = () => {\n        return contentNode;\n    };\n\n    const setContent = (content) => {\n        hideLoadingIcon();\n\n        // Note: It would be better to use replaceWith, but this is not compatible with IE.\n        let child = contentNode.lastElementChild;\n        while (child) {\n            contentNode.removeChild(child);\n            child = contentNode.lastElementChild;\n        }\n        contentNode.append(content);\n    };\n\n    const showLoadingIcon = () => {\n        addIconToContainer(loadingNode);\n    };\n\n    const hideLoadingIcon = () => {\n        // Hide the loading container.\n        let child = loadingNode.lastElementChild;\n        while (child) {\n            loadingNode.removeChild(child);\n            child = loadingNode.lastElementChild;\n        }\n    };\n\n    /**\n     * @return {Object}\n     */\n    return {\n        close,\n\n        toggleFullscreen,\n        requestFullscreen,\n        exitFullscreen,\n\n        getContainer,\n        setContent,\n\n        showLoadingIcon,\n        hideLoadingIcon,\n    };\n};\n\nconst lockBodyScroll = () => {\n    document.querySelector('body').classList.add('overflow-hidden');\n};\n\nconst unlockBodyScroll = () => {\n    document.querySelector('body').classList.remove('overflow-hidden');\n};\n\nexport const createLayout = getComposedLayout;\n"],"file":"fullscreen.min.js"}